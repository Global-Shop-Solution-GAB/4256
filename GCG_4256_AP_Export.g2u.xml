<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <BorderStyle>None</BorderStyle>
  <Pages>
    <DefaultPage>
      <Header>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Header>
      <Footer>
        <Offset>
          <X>0</X>
          <Y>0</Y>
        </Offset>
      </Footer>
      <PageSize>
        <Width>0</Width>
        <Height>0</Height>
      </PageSize>
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>265</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>3</Height>
      </Size>
      <X>0</X>
      <Y>265</Y>
      <Width>24</Width>
      <Height>3</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <LineNumbersForeColor>WindowText</LineNumbersForeColor>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Footer>
    <Header>
      <Offset>
        <X>0</X>
        <Y>0</Y>
      </Offset>
    </Header>
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>265</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.Preflight.Start</string>
        <string>Variable.Global.sDirectory.Declare(String)</string>
        <string />
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)</string>
        <string />
        <string>'Exp Acct Batch Hook</string>
        <string>F.Intrinsic.Control.If(V.Caller.Hook,=,42400)</string>
        <string>	F.Intrinsic.Control.CallSub(Check_Directory)</string>
        <string>	F.Intrinsic.Control.CallSub(BuildFile)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.CallSub(unload)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4256_AP_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.BuildFile.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("BuildFile_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSQL.Declare(String)</string>
        <string>V.Local.sNow.Declare(String)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string>V.Local.sRow.Declare(String)</string>
        <string>V.Local.sFilePath.Declare(String)</string>
        <string>V.Local.sBatch.Declare(String)</string>
        <string>V.Local.sRecordStatus.Declare(String)</string>
        <string>V.Local.sSource.Declare(String)</string>
        <string>V.Local.sInvoiceNumber.Declare(String)</string>
        <string>V.Local.sInvoiceDate.Declare(String)</string>
        <string>V.Local.sSuppNumber.Declare(String)</string>
        <string>V.Local.sSuppName.Declare(String)</string>
        <string>V.Local.sSuppSite.Declare(String)</string>
        <string>V.Local.sCurr.Declare(String)</string>
        <string>V.Local.sPayGroup.Declare(String)</string>
        <string>V.Local.sLiabilityGCC.Declare(String)</string>
        <string>V.Local.sExchangeRate.Declare(String)</string>
        <string>V.Local.sExchangeRateType.Declare(String)</string>
        <string>V.Local.sExchangeRateDate.Declare(String)</string>
        <string>V.Local.sPaymentTerms.Declare(String)</string>
        <string>V.Local.sLineType.Declare(String)</string>
        <string>V.Local.sAmount.Declare(String)</string>
        <string>V.Local.sLineGCC.Declare(String)</string>
        <string>V.Local.sTaskNum.Declare(String)</string>
        <string>V.Local.sExpenditureType.Declare(String)</string>
        <string>V.Local.sCostCenter.Declare(String)</string>
        <string>V.Local.sExpenditureDate.Declare(String)</string>
        <string>V.Local.sLineDesc.Declare(String)</string>
        <string>V.Local.sGLAccount.Declare(String)</string>
        <string>'Blank fields that can be used at a later date</string>
        <string>V.Local.sInvoiceDesc.Declare(String)</string>
        <string>V.Local.sTaxName.Declare(String)</string>
        <string>V.Local.sInfo1.Declare(String)</string>
        <string>V.Local.sInfo2.Declare(String)</string>
        <string>V.Local.sInfo5.Declare(String)</string>
        <string>V.Local.sHoldCode.Declare(String)</string>
        <string>V.Local.sHoldAction.Declare(String)</string>
        <string />
        <string />
        <string>'F.Intrinsic.Debug.InvokeDebugger</string>
        <string>'</string>
        <string>'F.Intrinsic.Debug.Stop</string>
        <string />
        <string>'We need to get the records for AP</string>
        <string>F.Intrinsic.String.Build("SELECT DISTINCT Batch_Num FROM V_BI_COMB_JE_AUDIT WHERE RPTID = '000817' and trmnl = '{0}' and APPL_TYPE = 'AP'",V.Caller.Terminal,V.Local.sSQL)</string>
        <string>F.ODBC.Connection!con.OpenLocalRecordsetRO("rstBatch",V.Local.sSQL)</string>
        <string />
        <string>'Check to see if there are records to export, if not inform user that there is nothing to export.</string>
        <string>F.Intrinsic.Control.If(V.ODBC.con!rstBatch.EOF,&lt;&gt;,True)</string>
        <string>	'Loop until the end of the records is reached</string>
        <string>	F.Intrinsic.Control.DoUntil(V.ODBC.con!rstBatch.EOF,=,True)</string>
        <string>		V.Local.sBatch.Set(V.ODBC.con!rstBatch.FieldValTrim!Batch_Num)</string>
        <string>		</string>
        <string>		'Get all data that is grabbed from AP_Open_Items</string>
        <string>		F.Intrinsic.String.Build("SELECT DISTINCT INVOICE,DATE_INVOICE,VENDOR,EXCHANGE_CURR,EXCHANGE_RATE,DATE_EXCHANGE,AMT_INVOICE,GL_ACCOUNT FROM V_AP_OPEN_ITEMS WHERE BATCH_NUM = '{0}' ORDER BY BATCH_NUM,INVOICE",V.Local.sBatch,V.Local.sSQL)</string>
        <string>		F.ODBC.Connection!con.OpenLocalRecordsetRO("rstAP",V.Local.sSQL)</string>
        <string>		</string>
        <string>		'We need to loop through and grab the data for each record in AP_Open_Items</string>
        <string>		F.Intrinsic.Control.DoUntil(V.ODBC.con!rstAP.EOF,=,True)</string>
        <string>			'Check to see if there if the invoice number is different, only one line per invoice</string>
        <string>			F.Intrinsic.Control.If(V.ODBC.con!rstAP.FieldValTrim!INVOICE,&lt;&gt;,V.Local.sInvoiceNumber)</string>
        <string>				'Set data</string>
        <string>				V.Local.sInvoiceNumber.Set(V.ODBC.con!rstAP.FieldValTrim!INVOICE)</string>
        <string>				F.Intrinsic.String.Format(V.ODBC.con!rstAP.FieldValTrim!DATE_INVOICE,"MMDDYYYY",V.Local.sInvoiceDate)</string>
        <string>				V.Local.sSuppNumber.Set(V.ODBC.con!rstAP.FieldValTrim!VENDOR)</string>
        <string>				V.Local.sCurr.Set(V.ODBC.con!rstAP.FieldValTrim!EXCHANGE_CURR)</string>
        <string>				V.Local.sExchangeRate.Set(V.ODBC.con!rstAP.FieldValTrim!EXCHANGE_RATE)</string>
        <string>				F.Intrinsic.String.Format(V.ODBC.con!rstAP.FieldValTrim!DATE_EXCHANGE,"MMDDYYYY",V.Local.sExchangeRateDate)</string>
        <string>				</string>
        <string>				'Get total amount for invoice number</string>
        <string>				F.Intrinsic.String.Build("SELECT SUM(AMT_INVOICE) AS AMTINVOICE FROM AP_OPEN_ITEMS WHERE BATCH_NUM = '{0}' AND INVOICE = '{1}'",V.Local.sBatch,V.Local.sInvoiceNumber,V.Local.sSQL)</string>
        <string>				F.ODBC.Connection!con.OpenLocalRecordsetRO("rstAmount",V.Local.sSQL)</string>
        <string>				</string>
        <string>				F.Intrinsic.Control.If(V.ODBC.con!rstAmount.EOF,&lt;&gt;,True)</string>
        <string>					V.Local.sAmount.Set(V.ODBC.con!rstAmount.FieldValTrim!AMTINVOICE)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>				</string>
        <string>				F.ODBC.con!rstAmount.Close</string>
        <string>				</string>
        <string>				'This will be split into Expenditure Type and Cost Center</string>
        <string>				V.Local.sGLAccount.Set(V.ODBC.con!rstAP.FieldValTrim!GL_ACCOUNT)			</string>
        <string>				</string>
        <string>				'Get Vendor Name</string>
        <string>				F.Intrinsic.String.Build("SELECT NAME_VENDOR FROM V_VENDOR_MASTER WHERE VENDOR = '{0}'",V.Local.sSuppNumber,V.Local.sSQL)</string>
        <string>				F.ODBC.Connection!con.OpenLocalRecordsetRO("rstVend",V.Local.sSQL)</string>
        <string>				</string>
        <string>				'Check to make sure that there is a record. There should be since there is a record in the BI_COMB_JE_AUDIT table</string>
        <string>				F.Intrinsic.Control.If(V.ODBC.con!rstVend.EOF,&lt;&gt;,True)</string>
        <string>					V.Local.sSuppName.Set(V.ODBC.con!rstVend.FieldValTrim!NAME_VENDOR)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>				</string>
        <string>				F.ODBC.con!rstVend.Close</string>
        <string>				</string>
        <string>				'Get Supplier Site Code and Pay Group</string>
        <string>				F.Intrinsic.String.Build("SELECT ADDRESS4,ADDRESS5 FROM V_VENDOR_INTL WHERE REC = '1' AND VENDOR = '{0}'",V.Local.sSuppNumber,V.Local.sSQL)</string>
        <string>				F.ODBC.Connection!con.OpenLocalRecordsetRO("rstIntl",V.Local.sSQL)</string>
        <string>				</string>
        <string>				F.Intrinsic.Control.If(V.ODBC.con!rstIntl.EOF,&lt;&gt;,True)</string>
        <string>					V.Local.sSuppSite.Set(V.ODBC.con!rstIntl.FieldValTrim!ADDRESS4)</string>
        <string>					V.Local.sPayGroup.Set(V.ODBC.con!rstIntl.FieldValTrim!ADDRESS5)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>				</string>
        <string>				F.ODBC.con!rstIntl.Close</string>
        <string>				</string>
        <string>				'Get Payment Terms</string>
        <string>				F.Intrinsic.String.Build("SELECT PAYMENT_TERMS FROM V_VENDOR_PAY_TO WHERE VENDOR = '{0}'",V.Local.sSuppNumber,V.Local.sSQL)</string>
        <string>				F.ODBC.Connection!con.OpenLocalRecordsetRO("rstPay",V.Local.sSQL)</string>
        <string>				</string>
        <string>				F.Intrinsic.Control.If(V.ODBC.con!rstPay.EOF,&lt;&gt;,True)</string>
        <string>					V.Local.sPaymentTerms.Set(V.ODBC.con!rstPay.FieldValTrim!PAYMENT_TERMS)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>				</string>
        <string>				F.ODBC.con!rstPay.Close</string>
        <string>				</string>
        <string>				'Set the defaulted values</string>
        <string>				V.Local.sRecordStatus.Set("N")</string>
        <string>				V.Local.sSource.Set("GSS")</string>
        <string>				V.Local.sLiabilityGCC.Set("0382-000000-00000-4110-0001-00000")</string>
        <string>				V.Local.sExchangeRateType.Set("SPOT")</string>
        <string>				V.Local.sLineType.Set("ITEM")</string>
        <string>				V.Local.sTaskNum.Set("1")</string>
        <string>				</string>
        <string>				</string>
        <string>'F.Intrinsic.Debug.InvokeDebugger</string>
        <string>'</string>
        <string>'F.Intrinsic.Debug.Stop</string>
        <string>'				</string>
        <string>				'Set Expenditure Type and Cost Center</string>
        <string>				F.Intrinsic.String.Split(V.Local.sGLAccount,".",V.Local.sGLAccount)</string>
        <string>				V.Local.sGLAccount.RedimPreserve(0,2)</string>
        <string>				'Expenditure Type</string>
        <string>				F.Intrinsic.String.Build("{0}.{1}",V.Local.sGLAccount(1),V.Local.sGLAccount(2),V.Local.sExpenditureType)</string>
        <string>				'Cost Center</string>
        <string>				V.Local.sCostCenter.Set(V.Local.sGLAccount(0))</string>
        <string>				'Line GCC</string>
        <string>				F.Intrinsic.String.Build("0382.{0}.00000.{1}",V.Local.sCostCenter,V.Local.sExpenditureType,V.Local.sLineGCC)</string>
        <string>				'Expenditure Date</string>
        <string>				F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYYYY",V.Local.sExpenditureDate)</string>
        <string>				'Line Description</string>
        <string>				F.Intrinsic.String.Build("GSS AP Export {0}",V.Local.sBatch,V.Local.sLineDesc)</string>
        <string>				'Project number is not currently being used so it is blank</string>
        <string>				</string>
        <string>				'Build file content</string>
        <string>				F.Intrinsic.String.Build("{0}|{1}|{2}|{3}|{4}|{5}|{6}",V.Local.sRecordStatus.Left1,V.Local.sSource.Left14,V.Local.sInvoiceNumber.Left50,V.Local.sInvoiceDate.Left8,V.Local.sSuppNumber.Left15,V.Local.sSuppName.Left50,V.Local.sSuppSite.Left15,V.Local.sRow)</string>
        <string>				F.Intrinsic.String.Build("{0}|{1}|{2}|{3}|{4}|{5}|{6}",V.Local.sRow,V.Local.sCurr.Left3,V.Local.sPayGroup.Left30,V.Local.sInvoiceDesc.Left60,V.Local.sLiabilityGCC.Left32,V.Local.sExchangeRate.Left9,V.Local.sExchangeRateType.Left30,V.Local.sRow)</string>
        <string>				F.Intrinsic.String.Build("{0}|{1}|{2}|{3}|{4}|{5}|{6}",V.Local.sRow,V.Local.sExchangeRateDate.Left8,V.Local.sPaymentTerms.Left25,V.Local.sLineType.Left15,V.Local.sAmount.Left15,V.Local.sLineGCC.Left32,"",V.Local.sRow)</string>
        <string>				F.Intrinsic.String.Build("{0}|{1}|{2}|{3}|{4}|{5}|{6}",V.Local.sRow,"","","",V.Local.sExpenditureDate.Left8,V.Local.sTaxName.Left15,V.Local.sLineDesc.Left60,V.Local.sRow)</string>
        <string>				F.Intrinsic.String.Build("{0}|{1}|{2}|{3}|{4}|{5}",V.Local.sRow,V.Local.sInfo1.Left30,V.Local.sInfo2.Left30,V.Local.sInfo5.Left30,V.Local.sHoldCode.Left25,V.Local.sHoldAction.Left60,V.Local.sRow)</string>
        <string>				</string>
        <string>				F.Intrinsic.Control.If(V.Local.sFile.Trim,=,"")</string>
        <string>					V.Local.sFile.Set(V.Local.sRow)</string>
        <string>				F.Intrinsic.Control.Else</string>
        <string>					F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sFile,V.Ambient.NewLine,V.Local.sRow,V.Local.sFile)</string>
        <string>				F.Intrinsic.Control.EndIf</string>
        <string>			F.Intrinsic.Control.EndIf</string>
        <string>			</string>
        <string>			F.ODBC.con!rstAP.MoveNext</string>
        <string>		F.Intrinsic.Control.Loop</string>
        <string>		</string>
        <string>		F.ODBC.con!rstAP.Close</string>
        <string>		</string>
        <string>		F.ODBC.con!rstBatch.MoveNext</string>
        <string>	F.Intrinsic.Control.Loop</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.ODBC.con!rstBatch.Close</string>
        <string />
        <string>'If no data was found don't create export</string>
        <string>F.Intrinsic.Control.If(V.Local.sFile.Trim,&lt;&gt;,"")</string>
        <string>	'Create file</string>
        <string>	F.Intrinsic.String.Format(V.Ambient.Now,"MMDDYYYYHHNNSS",V.Local.sNow)</string>
        <string>	F.Intrinsic.String.Build("{0}\{1}_AP.csv",V.Global.sDirectory,V.Local.sNow,V.Local.sFilePath)</string>
        <string>	F.Intrinsic.File.String2File(V.Local.sFilePath,V.Local.sFile)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("BuildFile_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4256_AP_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.BuildFile.End</string>
        <string />
        <string>Program.Sub.unload.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("unload_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.Close</string>
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("unload_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4256_AP_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.unload.End</string>
        <string />
        <string>Program.Sub.Check_Directory.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Check_Directories_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.bExists.Declare(Boolean)</string>
        <string />
        <string>'We need to make sure that the directory exists before continuing, if not we need to create it.</string>
        <string>F.Intrinsic.String.Build("{0}\AP_EXPORT",V.Caller.FilesDir,V.Global.sDirectory)</string>
        <string>F.Intrinsic.File.DirExists(V.Global.sDirectory,V.Local.bExists)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.bExists,&lt;&gt;,True)</string>
        <string>	F.Intrinsic.File.CreateDir(V.Global.sDirectory)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Check_Directories_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4256_AP_Export.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(unload)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string>Program.Sub.Check_Directories.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$AR, AP, GL, and Employee Hours Export Files$}$BCC$}$10/31/2016 4:00:02 PM$}$False</string>
        <string>${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$This program will generate a custom delimited files that will be generated at the time of the Batch is posted. This will occur when the AR Pipe Delimited .txt, AP CSV, and GL CSV batches are fully posted in Global Shop. We will also export Employee Hours as a CSV file when ran from a custom menu item.</string>
        <string>Program.Sub.Comments.End</string>
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>209</WindowOriginY>
    <Options>None</Options>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>3</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>5</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>28</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>30</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>218</Y>
        </EndPoint>
        <Text>Program.Sub.BuildFile</Text>
        <DisplayText>Program.Sub.BuildFile</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>220</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>238</Y>
        </EndPoint>
        <Text>Program.Sub.unload</Text>
        <DisplayText>Program.Sub.unload</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>265</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>268</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>